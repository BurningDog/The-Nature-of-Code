
Chapter 4.  Particle Systems
----------------------------


Testing the function [function]*setup()* and the class [klass]*PVector*.  Also here is a formula style (non mathml):

[formula]*y = sin(theta) `*` r*

And here is the style for something just monospaced:

[mono]*x: 5* + 
[mono]*y: 300*

[source,java]
----
// testing some code
int x = 100;
int y = 50;

void setup() {
  
}
----

++++
<table class="code">
<tr>
<th>Task</th>
<th>Function</th>
</tr>
<tr>
<td>Convert location from World to Pixels</td>
<td><pre>Vec2 coordWorldToPixels(Vec2 world)</pre></td>
</tr>
<tr>
<td>Convert location from World to Pixels</td>
<td><pre>Vec2 coordWorldToPixels(float worldX, float worldY)</pre></td>
</tr>
<tr>
<td>Convert location from Pixels to World</td>
<td><pre>Vec2 coordPixelsToWorld(Vec2 screen)</pre></td>
</tr>
<tr>
<td>Convert location from Pixels to World</td>
<td><pre>Vec2 coordPixelsToWorld(float pixelX, float pixelY)</pre></td>
</tr>

<tr>
<td>Scale a dimension (such as height, width, or radius) from Pixels to World</td>
<td><pre>float scalarPixelsToWorld(float val)</pre></td>
</tr>

<tr>
<td>Scale a dimension from World to Pixels</td>
<td><pre>float scalarWorldToPixels(float val)</pre></td>
</tr>

</table>
++++

++++
<table class="code">
<tr>
<th>PVector</th>
<th>Vec2D</th>
</tr>
<tr>
<td>
<pre>
PVector a = new PVector(1,-1);
PVector b = new PVector(3,4);
a.add(b);
</pre>
</td>
<td>
<pre>
Vec2D a = new Vec2D(1,-1);
Vec2D b = new Vec2D(3,4);
a.addSelf(b);
</pre>
</td>
</tr>

<tr>
<td>
<pre>
PVector a = new PVector(1,-1);
PVector b = new PVector(3,4);
PVector c = PVector.add(a,b);
</pre>
</td>
<td>
<pre>
Vec2D a = new Vec2D(1,-1);
Vec2D b = new Vec2D(3,4);
Vec2D c = a.add(b);
</pre>
</td>
</tr>

<tr>
<td>
<pre>
PVector a = new PVector(1,-1);
float m = a.mag();
a.normalize();
</pre>
</td>
<td>
<pre>
Vec2D a = new Vec2D(1,-1);
float m = a.magnitude();
a.normalize();
</pre>
</td>
</tr>

</table>
++++

=== 4.1 Testing tables

