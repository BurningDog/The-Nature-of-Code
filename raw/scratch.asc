The Nature of Code
==================

Chapter 2.  Forces
------------------



++++
<table class="code">
<tr>
<th>Vehicle PVector inputs</th>
<th>Line float inputs</th>
</tr>
<tr>
<td>
<pre>
PVector feedforward(PVector[] forces) {
  // Sum is a PVector.
  <b>PVector sum = new PVector();</b>
  for (int i = 0; i &lt; weights.length; i++) { 
    // Vector addition and multiplication
    <b>forces[i].mult(weights[i]);</b>
    <b>sum.add(forces[i]);</b>
  }
  // No activation function
  <b>return sum;</b>
}
</pre>
</td>
<td>
<pre>
int feedforward(float[] inputs) {
  // Sum is a float.
  <b>float sum = 0;</b>
  for (int i = 0; i &lt; weights.length; i++) {
    // Scalar addition and multiplication
    <b>sum += inputs[i]*weights[i];</b>

  }
  // Activation function
  <b>return activate(sum);</b>
}
</pre>
</td>
</tr>

</table>
++++

[source,java]
----
 void feedforward(float input) {
    sum += input;
    // Activate the neuron and fire the outputs?
    if (sum > 1) {
      fire();
      // If weâ€™ve fired off our output,
      // we can reset our sum to 0.
      sum = 0;
    }
  }
----