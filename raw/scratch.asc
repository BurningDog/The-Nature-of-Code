The Nature of Code
==================

toc::[]

Chapter 2.  Forces
------------------

=== 2.1 Polar vs. Cartesian Coordinates

Processing’s drawing functions, however, don’t understand polar coordinates.  Whenever we want to display something in Processing, we have to specify locations as _(x,y)_ Cartesian coordinates.   However, sometimes it is a great deal more convenient for us to think in polar coordinates when designing.   Happily for us, with trigonometry we can convert back and forth between polar and Cartesian, which allows us to design with whatever coordinate system we have in mind but always draw with Cartesian coordinates.

[[chapter03_figure8]]
image::imgs/chapter03/ch03_08.png[alt="Figure 3.8: The Greek letter θ (theta) is often used to denote an angle.  Since a polar coordinate is conventionally referred to as (r, θ), we’ll use theta as a variable name when referring to an angle."]

[formula]*sine(theta) {nbsp}{nbsp}= y/r {nbsp}{nbsp}->{nbsp}{nbsp} y = r `*` sine(theta)* + 
[formula]*cosine(theta) = x/r {nbsp}{nbsp}->{nbsp}{nbsp} x = r `*` cosine(theta)*

=== 2.2 Polar vs. Cartesian Coordinates

Chapter 3.  Forces
------------------

=== 3.1 Polar vs. Cartesian Coordinates

blah blah

=== 3.2 Polar vs. Cartesian Coordinates

blah blah