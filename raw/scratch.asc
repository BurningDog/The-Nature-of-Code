The Nature of Code
==================

Chapter 4.  Particle Systems
----------------------------

[quote, Spock]
____________________________________________________________________
“That is wise. Were I to invoke logic, however, logic clearly dictates that the needs of the many outweigh the needs of the few.”
____________________________________________________________________


[[chapter04_section1]]
=== 4.1 Why We Need Particle Systems

In 1982, William T. Reeves, a researcher at Lucasfilm Ltd., was working on the film _Star Trek II: The Wrath of Khan_.   Much of the movie revolves around the Genesis Device, a torpedo that when shot at a barren, lifeless planet has the ability to reorganize matter and create a habitable world for colonization. During the sequence, a wall of fire ripples over the planet while it is being “terraformed.”   The term *_particle system_*, an incredibly common and useful technique in computer graphics, was coined in the creation of this particular effect.


[quote, William Reeves, Particle Systems—a Technique for Modeling a Class of Fuzzy Objects, _ACM Transactions on Graphics_ 2:2 (April 1983), 92.]
____________________________________________________________________
"A particle system is a collection of many many minute particles that together represent a fuzzy object. Over a period of time, particles are generated into a system, move and change from within the system, and die from the system."
____________________________________________________________________

Since the early 1980s, particle systems have been used in countless video games, animations, digital art pieces, and installations to model various irregular types of natural phenomena, such as fire, smoke, waterfalls, fog, grass, bubbles, and so on.   

This chapter will be dedicated to looking at implementation strategies for coding a particle system. How do we organize our code? Where do we store information related to individual particles versus. information related to the system as a whole?  The examples we’ll look at focus on managing the data associated with a particle system, they examples will use simple shapes for the particles and apply only the most basic behaviors (gravity, eLtc.). However, by using this framework and building in more interesting ways to render the particles and compute behaviors, you can achieve a variety of effects.
